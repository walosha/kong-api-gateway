_format_version: "2.1"

services:
  - name: app-1
    host: 172.17.0.1
    port: 8080
    protocol: http
    routes:
      - name: ts-route
        paths: ["/product"]
        strip_path: true
consumers:
  - username: api-user

basicauth_credentials:
  - consumer: api-user
    username: root
    password: secret
keyauth_credentials:
  - consumer: api-user
    key: secret
acls:
  - consumer: api-user
    group: group1

plugins:
  - name: basic-auth
    config:
      hide_credentials: true
  - name: key-auth
    config:
      key_names:
        - apikey
      key_in_body: false
      key_in_header: true
      key_in_query: true
      hide_credentials: false
      run_on_preflight: true
    enabled: false
  - name: acl
    config:
      allow:
        - group1
      hide_groups_header: true
    enabled: false
  # - name: http-log
  #   config:
  #     http_endpoint: http://172.17.0.1:8080/
  #     method: POST
  #     timeout: 1000
  #     keepalive: 1000
  #     flush_timeout: 2
  #     retry_count: 15
  - name: correlation-id
    config:
      header_name: Request-ID
      generator: tracker
      echo_downstream: true

  - name: rate-limiting
    config:
      # second: 5
      minute: 5
      policy: local
      fault_tolerant: true
      hide_client_headers: false
      redis_ssl: false
      redis_ssl_verify: false
  # comment these if you don't want to store rate limiting data in redis
  #    policy: redis
  #    redis_host: 172.27.59.36
  #    redis_password: example
  - name: cors
    config:
      origins:
        - "*"
      methods:
        - GET
        - POST
      headers:
        - Accept
        - Accept-Version
        - Content-Length
        - Content-MD5
        - Content-Type
        - Date
        - X-Auth-Token
      exposed_headers:
        - X-Auth-Token
      credentials: true
      max_age: 3600
  - name: ip-restriction
    config:
      allow:
        - 172.18.0.1
      # deny:
      #   - xxx.xxx.xxx.x
      # status: 401
      # message: cannot grant access
  # - name: bot-detection
  #   config:
  #     deny:
  #       - "curl"
  #   enabled: false
  - name: proxy-cache
    config:
      response_code:
        - 200
      request_method:
        - GET
        - HEAD
      content_type:
        - text/plain
        - application/json
        - application/json; charset=utf-8
      cache_ttl: 300
      strategy: memory
    enabled: false
  # - name: request-size-limiting
  #   config:
  #     allowed_payload_size: 1
  #     size_unit: kilobytes
  #     require_content_length: false
  - name: request-termination
    config:
      status_code: 403
      # message: So long!
      # body: "{message: So long}"
      # content_type: "application/json; charset=utf-8"
      # trigger: "q"
    enabled: false
  # - name: file-log
  #   config:
  #     path: /file.log
  #     reopen: false
  - name: prometheus
    config:
      status_code_metrics: true
      latency_metrics: true
      upstream_health_metrics: true
      bandwidth_metrics: true
